<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration> <!-- 注意配置元素的位置顺序不能乱，否则报错 -->

   <properties resource="db.properties" />
   
   <settings>
  	  <setting name="lazyLoadingEnabled" value="true" />
  	  <setting name="aggressiveLazyLoading" value="false" />
   </settings>
   
   <!-- 通过自动扫描包的形式自定义别名 -->
   <typeAliases>
      <package name="entity"/>
   </typeAliases>
   
   <plugins>
		<!-- com.github.pagehelper为PageHelper类所在包名 -->
		<plugin interceptor="com.github.pagehelper.PageHelper">
			<property name="dialect" value="mysql" />
			<!-- 该参数默认为false -->
			<!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
			<!-- 和startPage中的pageNum效果一样 -->
			<property name="offsetAsPageNum" value="true" />
			<!-- 该参数默认为false -->
			<!-- 设置为true时，使用RowBounds分页会进行count查询 -->
			<property name="rowBoundsWithCount" value="true" />
			<!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
			<!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型） -->
			<property name="pageSizeZero" value="true" />
			<!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
			<!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
			<!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
			<property name="reasonable" value="true" />
			<!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->
			<!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
			<!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,不配置映射的用默认值 -->
			<!-- 不理解该含义的前提下，不要随便复制该配置 -->
			<property name="params" value="pageNum=start;pageSize=limit;" />
			<!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page -->
			<property name="returnPageInfo" value="check" />
		</plugin>
   </plugins>
   
   <!--1.配置环境 ，默认的环境id为mysql-->
   <environments default="mysql"> 
   	  <!--1.2.配置id为mysql的数据库环境 -->
      <environment id="mysql"> 
      	 <!-- 使用JDBC的事务管理 -->
         <transactionManager type="JDBC" /> 
         	<!--数据库连接池 -->
            <dataSource type="POOLED">
	         <property name="driver" value="${jdbc.driver}" />
             <property name="url" value="${jdbc.url}" />              
	         <property name="username" value="${jdbc.username}" />
	         <property name="password" value="${jdbc.password}" />
         	</dataSource>
       </environment>
   </environments> 
   
   <!--2.配置Mapper的位置 -->
   <mappers>
   	  <mapper resource="mapper/UserMapper.xml" />
   	  <mapper resource="mapper/RecipeMapper.xml" />
   	  <mapper resource="mapper/PictureMapper.xml" />
   	  <mapper resource="mapper/StepMapper.xml" />
   	  <mapper resource="mapper/IncludeMapper.xml" />
   </mappers>
   
</configuration>